version: 2.1

orbs:
  node: circleci/node@2.0.3

executors:
  my-executor:
    working_directory: ~/app
    machine:
      image: ubuntu-1604:201903-01

jobs:
  build:
    executor: my-executor
    steps:
      - run:
          name: set_env_variables
          command: |
            echo $CIRCLE_BRANCH;
            echo $CIRCLE_TAG;
            if [[ -n "$CIRCLE_TAG" ]]; then
              echo 'export TAG=latest' >> $BASH_ENV;
              echo 'export DEPLOY=true' >> $BASH_ENV;
              echo 'export CACHE_TAG=latest' >> $BASH_ENV;
              echo 'USING RELEASE CONFIG';
            elif [[ "$CIRCLE_BRANCH" = "master" && -z "$CIRCLE_PULL_REQUEST" ]]; then
              echo 'export TAG=staging' >> $BASH_ENV;
              echo 'export DEPLOY=true' >> $BASH_ENV;
              echo 'export CACHE_TAG=staging' >> $BASH_ENV;
              echo 'USING STAGING CONFIG';
            else
              echo "Circleci should run only on master push and tags!"
            fi
      - checkout
      - node/install:
          node-version: latest
      - restore_cache:
          keys:
            - npmcache-v2-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: npmcache-v2-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache
      - run: npm run docker:ci -- pull --ignore-pull-failures
      - run: npm run docker:ci -- build
      - run: npm run docker:ci -- up -d
      - deploy:
          command: |
            if [ "${DEPLOY}" == "true" ]; then
              docker exec --env SENTRY_URL --env SENTRY_AUTH_TOKEN --env SENTRY_ORG=toska --env SENTRY_PROJECT=oodikone frontend \
                sh +e -c 'npm run sentry-cli -- releases info "$(cat /SENTRY_RELEASE_VERSION)" && \
                npm run sentry-cli -- releases delete "$(cat /SENTRY_RELEASE_VERSION)" || true'

              docker exec --env SENTRY_URL --env SENTRY_AUTH_TOKEN --env SENTRY_ORG=toska --env SENTRY_PROJECT=oodikone frontend \
                sh -c 'npm run sentry-cli -- releases new --finalize "$(cat /SENTRY_RELEASE_VERSION)" && \
                npm run sentry-cli -- releases files "$(cat /SENTRY_RELEASE_VERSION)" upload-sourcemaps --rewrite dist'
            fi
            echo "$DOCKER_PASS" > DOCKER_PASS
            cat DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            npm run docker:ci -- push
            if [ "${DEPLOY}" == "true" ]; then
              curl --silent -X POST -H 'Content-type: application/json' --data "{\"text\":\"${CIRCLE_BRANCH}${CIRCLE_TAG} started auto deployment!\"}" ${SLACKBOT_URL}
            fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: master
            tags:
              only: /.*/
