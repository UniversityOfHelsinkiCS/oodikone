version: 2.1

executors:
  my-executor:
    working_directory: ~/app
    machine:
      image: ubuntu-1604:201903-01

jobs:
  build:
    executor: my-executor
    steps:
      - run: echo 'export AUTHOR_NAME="$(git log -1 ${CIRCLE_SHA1} --pretty="%aN")"' >> $BASH_ENV
      - run: |
          if [[ -n "$CIRCLE_TAG" ]]; then
            echo 'export SENTRY_RELEASE_VERSION=PRODUCTION-${CIRCLE_SHA1}' >> $BASH_ENV;
            echo 'export TAG=latest' >> $BASH_ENV;
            echo 'export DEPLOY=true' >> $BASH_ENV;
          elif [[ "$CIRCLE_BRANCH" = "master" && -n "$CIRCLE_PULL_REQUEST" ]]; then
            echo 'export SENTRY_RELEASE_VERSION=STAGING-${CIRCLE_SHA1}' >> $BASH_ENV;
            echo 'export TAG=staging' >> $BASH_ENV;
            echo 'export DEPLOY=true' >> $BASH_ENV;
          else
            echo 'export TAG=trunk' >> $BASH_ENV;
          fi
      - checkout
      - restore_cache:
          keys:
            - npmcache-v1-{{ checksum "package-lock.json" }}-
            - npmcache-v1-
      - run: npm install
      - save_cache:
          key: npmcache-v1-{{ checksum "package-lock.json" }}-{{ epoch }}
          paths:
            - node_modules
            - ~/.cache
      - run: docker pull node:10.15-alpine # pull base image that everything inherits only once
      - run: TAG=trunk docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml pull --ignore-pull-failures
      - run: TAG=staging docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml pull --ignore-pull-failures
      - run: TAG=latest docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml pull --ignore-pull-failures
      - run: docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml build
      - run: docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml up -d db user_db db_kone
      - run: git clone --depth 1 git@github.com:UniversityOfHelsinkiCS/anonyymioodi.git
      - run: source ./scripts/scripts.sh && init_dirs && db_anon_setup_full
      - run: docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml up -d
      - run: docker ps -a && docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml logs
      - run: npm run test_services
      - run: docker ps -a && docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml logs
      - run: timeout 5m bash -c 'until $(curl --output /dev/null --silent --fail http://localhost:1337/); do printf .; sleep 5; done'
      - run: npm run cypress -- run --config video=true --config videoCompression=false --config baseUrl=http://localhost:1337/
      - run: docker ps -a && docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml logs
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
      - run: if [[ $(docker ps --all | grep -Eo '(Exited|Restarting) \([0-9]+\)' | grep -Eo '[0-9]+' | awk 'BEGIN {sum=0} { sum += $1 } END { print sum }') != '0' ]]; then echo 'Some process had nonzero exit code'; exit 1; fi
      - deploy:
          command: |
            if [ "${DEPLOY}" == "true" ]; then
              echo 'DO RELEASE'
            fi
