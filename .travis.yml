language: node_js

node_js:
  # Node 10.3+ includes npm@6 which has good "npm ci" command
  - 10.8

cache:
  # cache both npm modules and Cypress binary
  npm: true
  directories:
    - ~/.cache

services:
  - docker

before_script:
  - docker --version
  - docker-compose --version
  - export AUTHOR_NAME="$(git log -1 ${TRAVIS_COMMIT} --pretty="%aN")"

jobs:
  include:
    - stage: login to docker
      script:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - stage: build staging
      if: NOT tag IS present
      env:
        - IMAGE=STAGING
        - TAG=staging
      script:
        - source scripts.sh && time run_e2e_setup ./docker/docker-compose.lateste2e.yml ${TAG}
    - stage: build latest
      if: tag IS present
      env:
        - IMAGE=PRODUCTION
        - TAG=latest
      script:
        - source scripts.sh && time run_e2e_setup ./docker/docker-compose.lateste2e.yml ${TAG}
    - stage: run tests
      script:
        - docker ps
        - cat nginx/log
        - TAG=${TAG} docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml logs -f &
        - until $(curl --output /dev/null --silent --fail http://localhost:1337/); do printf '.'; sleep 5; done
        - time npm run test_services
        - time CYPRESS_baseUrl=http://localhost:1337/ npm run cypress:record
        - docker ps -a
        - if [[ $(docker ps --all | grep -Eo '(Exited|Restarting) \([0-9]+\)' | grep -Eo '[0-9]+' | awk '{ sum += $1 } END { print sum }') != '0' ]]; then echo 'Some process had nonzero exit code'; exit 1; fi
    - stage: deploy to staging
      if: NOT tag IS present
      deploy:
        provider: script
        skip_cleanup: true
        script: "TAG=${TAG} docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml push && curl -X POST -H 'Content-type: application/json' --data \"{\\\"text\\\":\\\"Staging auto deployment started!\\\"}\" ${SLACKBOT_URL}"
        on:
          branch: master
    - stage: deploy to production
      if: tag IS present
      deploy:
        provider: script
        skip_cleanup: true
        script: "TAG=${TAG} docker-compose -f docker-compose.yml -f ./docker/docker-compose.lateste2e.yml push && curl -X POST -H 'Content-type: application/json' --data \"{\\\"text\\\":\\\"${TRAVIS_TAG} release started auto deployment!\\\"}\" ${SLACKBOT_URL}"
        on:
          tags: true
stages:
  - name: login to docker
  - name: build staging
    if: NOT tag IS present
  - name: build latest
    if: tag IS present
  - name: run tests
  - name: deploy to staging
    if: NOT tag IS present AND branch = master
  - name: deploy to production
    if: tag IS present

after_failure:
  - "curl -X POST -H 'Content-type: application/json' --data \"{\\\"text\\\":\\\"${IMAGE} buildi paskana. STOP AND FIX tai tulee kenkää! *${AUTHOR_NAME}* ${TRAVIS_BUILD_WEB_URL}\\\"}\" ${SLACKBOT_URL}"
