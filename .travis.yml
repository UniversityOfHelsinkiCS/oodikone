language: node_js

node_js:
  # Node 10.3+ includes npm@6 which has good "npm ci" command
  - 10.8

cache:
  # cache both npm modules and Cypress binary
  - npm
  directories:
    - ~/.cache

services:
  - docker

jobs:
  include:
    - stage: build & test trunk
      if: branch = trunk
      script:
        - set -e
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - source scripts.sh && run_e2e_setup
        - docker ps
        - cat nginx/log
        - until $(curl --output /dev/null --silent --fail http://localhost:1337/staging/); do printf '.'; sleep 5; done
        - npm run --prefix services/oodikone2-backend test_docker
        - npm test --prefix services/oodikone2-analytics
        - npm run --prefix services/oodikone2-userservice test_docker
        - npm test --prefix services/oodikone2-usageservice
        - npm test --prefix services/oodikone2-frontend
        - CYPRESS_baseUrl=http://localhost:1337/staging/ npm run cypress:record

    - stage: build & test & push & deploy staging
      if: branch = master
      script:
        - set -e
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - source scripts.sh && run_e2e_setup
        - docker ps
        - cat nginx/log
        - until $(curl --output /dev/null --silent --fail http://localhost:1337/staging/); do printf '.'; sleep 5; done
        - npm run --prefix services/oodikone2-backend test_docker
        - npm test --prefix services/oodikone2-analytics
        - npm run --prefix services/oodikone2-userservice test_docker
        - npm test --prefix services/oodikone2-usageservice
        - npm test --prefix services/oodikone2-frontend
        - CYPRESS_baseUrl=http://localhost:1337/staging/ npm run cypress:record
        - docker-compose -f docker-compose.lateste2e.yml push
        - "curl --fail -k -X POST -H \"Authorization: token ${TRAVIS_ACCESS_TOKEN}\" https://toska.cs.helsinki.fi/toskawatch/release/"

    - stage: build & push & MANUAL DEPLOY production
      if: tag =~ ^[0-9.]+$
      script:
        - set -e
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker-compose -f compose-latest.yml build
        - docker-compose -f compose-latest.yml push
        - echo "Done, please MANUAL DEPLOY"
