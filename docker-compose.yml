version: "3.2"

services:
  nats:
    image: nats-streaming:0.15.1
    command: -cid updaterNATS --file_slice_max_bytes 0 --file_slice_max_age 100h -store file -dir datastore
    expose:
      - "4222"
    ports:
      - "8222:8222"
      - "4222:4222"
    container_name: nats
    volumes:
      - datastore:/datastore

  analytics_db:
    image: postgres:9.6.3
    ports:
      - "5423:5432"
    volumes:
      - analytics_pgdata:/var/lib/postgresql/data
      - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    container_name: oodi_analytics_db
    environment:
      - POSTGRES_USER=postgres

  user_db:
    image: postgres:9.6.3
    ports:
      - "5422:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    container_name: oodi_user_db
    environment:
      - POSTGRES_USER=postgres

  usage_db:
    image: postgres:9.6.3
    ports:
      - "5424:5432"
    volumes:
      - usage_pgdata:/var/lib/postgresql/data
    container_name: oodi_usage_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=usage_db

  db:
    image: postgres:10-alpine
    ports:
      - "5421:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    container_name: oodi_db
    environment:
      - POSTGRES_USER=postgres

  db_kone:
    image: postgres:9.6.3
    ports:
      - "5425:5432"
    volumes:
      - pgdata_kone:/var/lib/postgresql/data
      - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    container_name: db_kone
    environment:
      - POSTGRES_MULTIPLE_DATABASES=db_kone
      - POSTGRES_USER=postgres

  db_sis:
    image: postgres:9.6.3
    ports:
      - "5426:5432"
    volumes:
      - pgdata_sis:/var/lib/postgresql/data
      - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    container_name: db_sis
    environment:
      - POSTGRES_USER=postgres

  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    container_name: redis

  backend:
    build:
      context: services/backend
      dockerfile: oodikone2-backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      REDIS: redis
      DB_URL: postgres://postgres@db:5432/tkt_oodi
      # DB_MAX_CONNECTIONS: 90 # defaults to 5
      DB_URL_KONE: postgres://postgres@db_kone:5432/db_kone
      # if NODE_ENV === 'test', these are used instead
      TEST_DB: postgres://postgres@db:5432/tkt_oodi_test
      TEST_DB_KONE: postgres://postgres@db_kone:5432/db_kone_test
      # same but for NODE_ENV === 'anon'
      # ANON_DB:
      # ANON_DB_KONE:
      TOKEN_SECRET: IWannaBeTheVeryBest
      USERSERVICE_URL: http://userservice:4567
      USAGESERVICE_URL: http://usageservice:545
      USERSERVICE_SECRET: Luukk4inenApprov3dVitunMinttuSalainenAvain666NurmivaaraPJ2019
      USAGESERVICE_SECRET: Luukk4inenApprov3dVitunMinttuSalainenAvain666NurmivaaraPJ2019
      ANALYTICS_URL: http://analytics:4568
      NATS_URI: nats://nats:4222
      UPDATER_URL: http://updater_scheduler:3678
      # Set these in production:
      # ANALYTICS_INFLUXDB_URL
      # ANALYTICS_INFLUXDB_DB
      # ANALYTICS_INFLUXDB_PASSWORD
      # ANALYTICS_INFLUXDB_USER
      # MATOMO_SITE_ID
      # MATOMO_URL
    container_name: backend
    depends_on:
      - db
      - redis
      - nats

  frontend:
    build:
      context: services/oodikone2-frontend
    environment:
      BACKEND_ADDR: backend
      ADMINER_URL: http://localhost:5050/?pgsql=db&username=postgres
    container_name: frontend

  userservice:
    build:
      context: services/oodikone2-userservice
    ports:
      - 4567:4567
    environment:
      DB_URL: postgres://postgres@user_db:5432/user_db
      TEST_DB: postgres://postgres@user_db:5432/user_db_test
      SECRET: Luukk4inenApprov3dVitunMinttuSalainenAvain666NurmivaaraPJ2019
      TOKEN_SECRET: IWannaBeTheVeryBest
    depends_on:
      - user_db
    container_name: userservice

  usageservice:
    build:
      context: services/oodikone2-usageservice
    ports:
      - 545:545
    environment:
      PORT: "545"
      DB_URL: postgres://postgres@usage_db:5432/usage_db
      SECRET: Luukk4inenApprov3dVitunMinttuSalainenAvain666NurmivaaraPJ2019
    depends_on:
      - usage_db
    container_name: usageservice

  updater_api:
    build:
      context: services/updater_api
    depends_on:
      - nats
    environment:
      - NATS_URI=nats://nats:4222
      - OODI_ADDR=https://oodikone.cs.helsinki.fi/oodi/test
      - TOKEN=jotaindiibadaabaa
    container_name: updater_api

  updater_writer:
    build:
      context: services/backend
      dockerfile: updater_writer/Dockerfile
    depends_on:
      - nats
      - db
    environment:
      NATS_URI: nats://nats:4222
      DB_URL: postgres://postgres@db:5432/tkt_oodi
      TEST_DB: postgres://postgres@db:5432/tkt_oodi_test
      TEST_DB_SCHEMA: updater_test
    container_name: updater_writer

  scheduler_mongo:
    image: mongo:4.0.10
    volumes:
      - mongodata:/data/db
    expose:
      - "27017"
    container_name: scheduler_mongo

  updater_scheduler:
    build:
      context: services/updater_scheduler
    depends_on:
      - nats
      - scheduler_mongo
    environment:
      - NATS_URI=nats://nats:4222
      - MONGO_URI=mongodb://scheduler_mongo:27017
      - PORT=3678
    container_name: updater_scheduler

  analytics:
    build:
      context: services/oodikone2-analytics
    ports:
      - 4568:4568
    environment:
      - DB_URL=postgres://postgres@analytics_db:5432/analytics_db
      - TEST_DB=postgres://postgres@analytics_db:5432/analytics_db_test
    depends_on:
      - analytics_db
    container_name: analytics

  sis-updater-nats:
    image: nats-streaming:0.16.2
    command: -cid sis-updater-nats -m 8222 -p 4222 --max_age 24h --hb_fail_count 2 --hb_timeout 10s --hb_interval 10s --auth dev --file_slice_max_bytes 0 --file_slice_max_age 60s --max_msgs 0 -store file -dir datastore
    container_name: sis-updater-nats
    volumes:
      - sis-updater-datastore:/datastore

  sis-updater-scheduler:
    build:
      context: services/sis-updater-scheduler
    environment:
      SIS_NATS_URI: sis-updater-nats://sis-updater-nats:4222
      SIS_NATS_TOKEN: dev
      SIS_IMPORTER_HOST: importer-db
      SIS_IMPORTER_USER: dev
      SIS_IMPORTER_PASSWORD: dev
      SIS_IMPORTER_DATABASE: importer-db
    container_name: sis-updater-scheduler
    depends_on:
      - redis
      - sis-updater-nats

  sis-updater-worker:
    build:
      context: services/sis-updater-worker
    environment:
      REDIS_URI: //redis:6379
      DB_URL: postgres://postgres@db_sis:5432/db_sis
      SIS_NATS_URI: sis-updater-nats://sis-updater-nats:4222
      SIS_NATS_TOKEN: dev
      SIS_IMPORTER_HOST: importer-db
      SIS_IMPORTER_USER: dev
      SIS_IMPORTER_PASSWORD: dev
      SIS_IMPORTER_DATABASE: importer-db
    depends_on:
      - redis
      - sis-updater-nats

volumes:
  datastore:
  analytics_pgdata:
  user_pgdata:
  usage_pgdata:
  pgdata:
  pgdata_kone:
  pgdata_sis:
  redis-data:
  mongodata:
  sis-updater-datastore:
