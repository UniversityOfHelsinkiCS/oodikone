version: '3'

services:
  user_db:
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=user_db

  db:
    environment:
      - POSTGRES_MULTIPLE_DATABASES=tkt_oodi,tkt_oodi_test
      - POSTGRES_USER=postgres

  backend:
    image: toska/oodikone2-backend:staging
    build:
      args:
        NODE_ENV: "production"
    ports:
      - "8080:8080"
      - "9229:9229"
    environment:
      FRONT_URL: http://localhost:1337
      ANALYTICS_ADMINER_URL: http://localhost:5050/?pgsql=analytics_db&username=postgres

  frontend:
    image: toska/oodikone2-frontend:staging
    build:
      args:
        NODE_ENV: "production"
        BASE_PATH: /
    command: ["sh", "-c", "/wait && npm run serve -- -s -l 5000 dist"]
    restart: "no"
    ports:
      - "5000:5000"
    environment:
      WAIT_HOSTS: user_db:5432
    restart: "no"

  userservice:
    image: toska/oodikone2-userservice:staging
    build:
      args:
        NODE_ENV: "production"
    restart: "no"

  usageservice:
    image: toska/oodikone2-usageservice:staging
    build:
      args:
        NODE_ENV: "production"
    restart: "no"

  updater_api:
    image: toska/updater_api:staging
    build:
      args:
        NODE_ENV: "production"
    restart: "no"

  updater_writer:
    image: toska/updater_writer:staging
    build:
      args:
        NODE_ENV: "production"
    restart: "no"

  updater_scheduler:
    image: toska/updater_scheduler:staging
    build:
      args:
        NODE_ENV: "production"
    command: ["echo", "mluukkai on orjuuttaja"]
    restart: "no"

  analytics:
    image: toska/oodikone2-analytics:staging
    build:
      args:
        NODE_ENV: "production"
    container_name: analytics
    restart: "no"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.staging.conf:/etc/nginx/nginx.conf
      - ./nginx/error.log:/etc/nginx/error_log.log
      - ./nginx/log:/var/log/nginx/localhost.error_log
      - ./nginx/cache/:/etc/nginx/cache
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      -  1337:80
    depends_on:
      - frontend
      - backend
      - userservice
      - analytics
    container_name: nginx
