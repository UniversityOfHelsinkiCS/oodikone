name: Release oodikone to staging

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/release-oodikone-staging.yaml'
      - 'services/**'
      - 'docker-compose.ci.yml'

jobs:
  build_and_release:
    name: "Build images and release"
    runs-on: ubuntu-latest
    env:
      TAG: staging
      CACHE_TAG: staging
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Build and push frontend"
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=toska/oodikone2-frontend:staging
          cache-to: type=inline
          context: services/oodikone2-frontend
          push: true
          tags: toska/oodikone2-frontend:staging
          build-args: |
            TAG: staging
            SENTRY_RELEASE=${{ github.sha }}
      - name: Create a container
        run: docker create --name frontend toska/oodikone2-frontend:staging
      - name: Copy assets from the container
        run: docker cp frontend:/usr/src/app/dist ./dist
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: toska
          SENTRY_PROJECT: oodikone
        with:
          environment: staging
          set_commits: 'skip'
          sourcemaps: './dist'
      - name: "Build other images"
        run: ./run.sh oodikone ci build backend userservice
      - name: "Push to docker hub"
        run: ./run.sh oodikone ci push backend userservice
      - name: "Send notification to slack"
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.1
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment
          softa-url: https://oodikone-staging.cs.helsinki.fi/
          deployment-target: staging

  report_failure:
    runs-on: ubuntu-latest
    name: Report deployment failure to oodikone notifications
    needs:
    - build_and_release
    if: failure()
    steps:
      - name: "Send notification to slack"
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.1
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment-failure
          deployment-target: staging
