name: 'Test and release updater'

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/test-and-release-updater.yaml'
      - 'updater/sis-updater-worker/**'
      - 'updater/sis-updater-scheduler/**'

jobs:
  build_worker:
    name: 'Build sis-updater-worker'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: 'Build the image'
        uses: docker/build-push-action@v2
        with:
          context: updater/sis-updater-worker/
          target: production
          push: false
          outputs: type=docker,dest=/tmp/worker.tar
          tags: toska/sis-updater-worker:latest
          cache-from: type=registry,ref=toska/sis-updater-worker:latest
          cache-to: type=inline
      - name: 'Store built image'
        uses: actions/upload-artifact@v2
        with:
          path: /tmp/worker.tar

  build_scheduler:
    name: 'Build sis-updater-scheduler'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: 'Build the image'
        uses: docker/build-push-action@v2
        with:
          context: updater/sis-updater-scheduler/
          target: production
          push: false
          outputs: type=docker,dest=/tmp/scheduler.tar
          tags: toska/sis-updater-scheduler:latest
          cache-from: type=registry,ref=toska/sis-updater-scheduler:latest
          cache-to: type=inline
      - name: 'Store built image'
        uses: actions/upload-artifact@v2
        with:
          path: /tmp/scheduler.tar

  test_updater:
    name: 'Test updater'
    runs-on: ubuntu-latest
    needs:
      - build_worker
      - build_scheduler
    steps:
      - uses: actions/checkout@v2
      - name: 'Login to toska docker registry'
        uses: docker/login-action@v1
        with:
          registry: registry.toska.cs.helsinki.fi
          username: ${{ secrets.TOSKAREGISTRY_USERNAME }}
          password: ${{ secrets.TOSKAREGISTRY_PASSWORD }}
      - name: 'Download built images'
        uses: actions/download-artifact@v2
        with:
          path: /tmp/
      - name: 'Load worker image'
        run: docker load --input /tmp/artifact/worker.tar
      - name: 'Load scheduler image'
        run: docker load --input /tmp/artifact/scheduler.tar
      - name: 'Start worker'
        run: docker-compose --file docker-compose.ci.yml up --detach --no-recreate sis-updater-worker
      - name: 'Run hourly jobs'
        run: docker-compose --file docker-compose.ci.yml run sis-updater-scheduler npm start
        env:
          SCHEDULE_IMMEDIATE: hourly
          EXIT_AFTER_IMMEDIATES: yes
      - name: 'Run weekly jobs'
        run: docker-compose --file docker-compose.ci.yml run sis-updater-scheduler npm start
        env:
          SCHEDULE_IMMEDIATE: weekly
          EXIT_AFTER_IMMEDIATES: yes
      - name: 'Run prepurge'
        run: docker-compose --file docker-compose.ci.yml run sis-updater-scheduler npm start
        env:
          SCHEDULE_IMMEDIATE: prepurge
          EXIT_AFTER_IMMEDIATES: yes
      - name: 'Run purge'
        run: docker-compose --file docker-compose.ci.yml run sis-updater-scheduler npm start
        env:
          SCHEDULE_IMMEDIATE: purge
          EXIT_AFTER_IMMEDIATES: yes

  release_updater:
    name: 'Release updater'
    runs-on: ubuntu-latest
    needs:
      - test_updater
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: 'Login to DockerHub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Build and push scheduler'
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=toska/sis-updater-scheduler:latest
          cache-to: type=inline
          context: updater/sis-updater-scheduler/
          push: true
          tags: toska/sis-updater-scheduler:latest
          target: production
      - name: 'Build and push worker'
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=toska/sis-updater-worker:latest
          cache-to: type=inline
          context: updater/sis-updater-worker/
          push: true
          tags: toska/sis-updater-worker:latest
          target: production
      - name: 'Send notification to slack'
        uses: UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment
          softa-url: https://oodikone.cs.helsinki.fi
          deployment-target: production
          softa-to-deploy: sis-updater
