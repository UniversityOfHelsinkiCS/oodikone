name: 'Test and release updater'

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/test-and-release-updater.yaml'
      - 'updater/sis-updater-worker/**'
      - 'updater/sis-updater-scheduler/**'

jobs:
  build_worker:
    name: 'Build sis-updater-worker'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: 'Build the image'
        uses: docker/build-push-action@v3
        with:
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
            SENTRY_ENVIRONMENT=production
          context: updater/sis-updater-worker/
          push: false
          outputs: type=docker,dest=/tmp/worker.tar
          tags: toska/sis-updater-worker:latest
          cache-from: type=registry,ref=toska/sis-updater-worker:latest
          cache-to: type=inline
      - name: 'Store built image'
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/worker.tar

  build_scheduler:
    name: 'Build sis-updater-scheduler'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: 'Build the image'
        uses: docker/build-push-action@v3
        with:
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
            SENTRY_ENVIRONMENT=production
          context: updater/sis-updater-scheduler/
          push: false
          outputs: type=docker,dest=/tmp/scheduler.tar
          tags: toska/sis-updater-scheduler:latest
          cache-from: type=registry,ref=toska/sis-updater-scheduler:latest
          cache-to: type=inline
      - name: 'Store built image'
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/scheduler.tar

  release_updater:
    name: 'Release updater'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: 'Login to DockerHub'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Build and push scheduler'
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,ref=toska/sis-updater-scheduler:latest
          cache-to: type=inline
          context: updater/sis-updater-scheduler/
          push: true
          tags: toska/sis-updater-scheduler:latest
      - name: 'Build and push worker'
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,ref=toska/sis-updater-worker:latest
          cache-to: type=inline
          context: updater/sis-updater-worker/
          push: true
          tags: toska/sis-updater-worker:latest
      - name: 'Create Sentry release'
        uses: getsentry/action-release@v1
        env:
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: toska
          SENTRY_PROJECT: updater
        with:
          environment: production
          set_commits: 'skip'
          sourcemaps: './build/static/js'
          url_prefix: '~/static/js'
          version: ${{ github.sha }}
      - name: 'Send notification to slack'
        uses: UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment
          softa-url: https://oodikone.cs.helsinki.fi
          softa-to-deploy: sis-updater
