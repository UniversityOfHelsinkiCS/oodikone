name: 'Temporary OpenShift workflow'

on:
  push:
    branches:
      - openshift

jobs:
  # === Build images ===
  build_backend:
    name: 'Build backend'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: 'Build image and export it'
        uses: docker/build-push-action@v3
        with:
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
            SENTRY_ENVIRONMENT=staging
          cache-from: |
            type=registry,ref=quay.io/toska/oodikone-backend:staging
          cache-to: type=inline
          context: services/backend
          push: false
          tags: oodikone-backend:staging
          outputs: type=docker,dest=/tmp/backend.tar
      - name: 'Upload image for other jobs'
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/backend.tar

  build_frontend:
    name: 'Build frontend'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: 'Get current time'
        id: get_current_time
        run: echo "NOW=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT
      - name: 'Build image and export it'
        uses: docker/build-push-action@v3
        with:
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
            SENTRY_ENVIRONMENT=staging
            BUILT_AT=${{ steps.get_current_time.outputs.NOW }}
          cache-from: |
            type=registry,ref=toska/oodikone-frontend:staging
          cache-to: type=inline
          context: services/frontend
          push: false
          tags: oodikone-frontend:staging
          outputs: type=docker,dest=/tmp/frontend.tar
      - name: 'Upload image for other jobs'
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/frontend.tar

  # === Release ===

  release_images:
    name: 'Release built images'
    runs-on: ubuntu-latest
    needs:
      - build_frontend
      - build_backend
    steps:
      - uses: actions/checkout@v3
      - name: 'Download images'
        uses: actions/download-artifact@v3
        with:
          path: /tmp/
      - name: 'Load built images'
        run: |
          docker load --input /tmp/artifact/backend.tar
          docker load --input /tmp/artifact/frontend.tar
      - name: 'Login to DockerHub'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Create a container from frontend'
        run: docker create --name frontend oodikone-frontend:staging
      - name: 'Copy assets from the container'
        run: docker cp frontend:/opt/app-root/src/build ./build
      # - name: 'Create Sentry release'
      #  uses: getsentry/action-release@v1
      #  env:
      #    SENTRY_URL: ${{ secrets.SENTRY_URL }}
      #    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #    SENTRY_ORG: toska
      #    SENTRY_PROJECT: oodikone
      #  with:
      #    environment: staging
      #    set_commits: 'skip'
      #    sourcemaps: './build/static/js'
      #    url_prefix: '~/static/js'
      #    version: ${{ github.sha }}
      - name: Push frontend to quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: oodikone-frontend
          tags: staging
          registry: quay.io/toska
          username: toska+github
          password: ${{ secrets.QUAY_IO_TOKEN }}
      - name: Push backend to quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: oodikone-backend
          tags: staging
          registry: quay.io/toska
          username: toska+github
          password: ${{ secrets.QUAY_IO_TOKEN }}
