name: Run end-to-end tests with Cypress

on:
  push:
    paths:
      - .github/workflows/cypress.yaml
      - cypress.json
      - cypress/**
      - services/**
      - package*.json

jobs:
  build:
    name: "Build and pull images"
    runs-on: ubuntu-latest
    env:
      TAG: trunk
      CACHE_TAG: trunk
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to toska docker registry
        uses: docker/login-action@v1
        with:
          registry: registry.toska.cs.helsinki.fi
          username: ${{ secrets.TOSKAREGISTRY_USERNAME }}
          password: ${{ secrets.TOSKAREGISTRY_PASSWORD }}
      - name: Pull needed images
        run: docker-compose -f docker-compose.ci.yml pull --ignore-pull-failures
      - name: Build analytics
        uses: docker/bake-action@v1.1.3
        with:
          push: false
          load: true
          files: docker-compose.ci.yml analytics
          set: |
            analytics.output.dest=/tmp/images/frontend.tar
      - name: Upload built images for next jobs
        uses: actions/upload-artifact@v2
        with:
          path: /tmp/images/


  test:
    needs: build
    name: "Run cypress tests"
    runs-on: ubuntu-latest
    env:
      TAG: trunk
      CACHE_TAG: trunk
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Download built images
          path: /tmp/images/
      - name: Load images
        run: |
          docker load --input /tmp/images/*.tar
          docker image ls -a
      # - name: Run services
      #   run: ./run.sh oodikone ci up -d --no-recreate
      # - name: Run cypress
      #   uses: cypress-io/github-action@v2
      # uses: cypress-io/github-action@v2
    #$  with:
    # $    browser: chrome
    # $  env:
#  $    CYPRESS_baseUrl: http://frontend
