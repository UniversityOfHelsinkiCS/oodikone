name: Release oodikone to production

on:
  release:
    types: [published]

jobs:
  build_and_release:
    name: "Build images and release"
    runs-on: ubuntu-latest
    env:
      TAG: latest
      CACHE_TAG: latest
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2
      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Build  images"
        run: ./run.sh oodikone ci build backend frontend userservice
      - name: "Start frontend"
        run: ./run.sh oodikone ci up -d frontend
      - name: "Add frontend to sentry"
        run: |
          docker exec --env SENTRY_URL=${{ secrets.SENTRY_URL }} --env SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} --env SENTRY_ORG=toska --env SENTRY_PROJECT=oodikone frontend \
            sh +e -c 'npm install sentry-cli && npm run sentry-cli -- releases info "$(cat /SENTRY_RELEASE_VERSION)" && '\
            'npm run sentry-cli -- releases delete "$(cat /SENTRY_RELEASE_VERSION)" || true'
          docker exec --env SENTRY_URL=${{ secrets.SENTRY_URL }} --env SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} --env SENTRY_ORG=toska --env SENTRY_PROJECT=oodikone frontend \
            sh -c 'npm run sentry-cli -- releases new --finalize "$(cat /SENTRY_RELEASE_VERSION)" && '\
            'npm run sentry-cli -- releases files "$(cat /SENTRY_RELEASE_VERSION)" upload-sourcemaps --rewrite dist'
      - name: "Push to docker hub"
        run: ./run.sh oodikone ci push backend frontend userservice
      - name: "Send notification to slack"
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment
          softa-url: https://oodikone.cs.helsinki.fi/
          deployment-target: production

  report_failure:
    runs-on: ubuntu-latest
    name: Report deployment failure to oodikone notifications
    needs:
    - build_and_release
    if: failure()
    steps:
      - name: "Send notification to slack"
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          message-type: deployment-failure
          deployment-target: production