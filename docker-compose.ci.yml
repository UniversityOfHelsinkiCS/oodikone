x-defaults: &defaults
  restart: unless-stopped

services:
  backend:
    <<: *defaults
    container_name: backend
    depends_on:
      - kone-db
      - redis
      - sis-db
      - user-db
    environment:
      CI: 'true'
      DB_URL_USER: postgres://postgres@user-db:5432/user-db
      DB_URL_KONE: postgres://postgres@kone-db:5432/kone-db
      FRONT_URL: http://localhost:1337
      REDIS: redis
      SECRET_TOKEN: dev
      SIS_DB_URL: postgres://postgres@sis-db:5432/sis-db
      SIS_UPDATER_URL: http://sis-updater-scheduler:8082
      IMPORTER_DB_API_URL: 'https://importer.cs.helsinki.fi/api/importer'
      JAMI_URL: 'http://jami:3003/'
    build:
      context: services/backend

  frontend:
    <<: *defaults
    container_name: frontend
    build:
      context: services/frontend

  kone-db:
    <<: *defaults
    container_name: kone-db
    environment:
      PGDATA: /data
      POSTGRES_DB: kone-db
      POSTGRES_HOST_AUTH_METHOD: trust
    image: registry.toska.cs.helsinki.fi/kone-db

  redis:
    <<: *defaults
    command: >
      sh -c 'redis-server --appendonly yes && redis-cli flushall'
    image: redis
    ports:
      - 6379:6379

  sis-db:
    <<: *defaults
    container_name: sis-db
    image: registry.toska.cs.helsinki.fi/sis-db
    environment:
      PGDATA: /data
      POSTGRES_DB: sis-db
      POSTGRES_HOST_AUTH_METHOD: trust
    shm_size: 2gb

  user-db:
    <<: *defaults
    container_name: user-db
    environment:
      PGDATA: /data
      POSTGRES_DB: user-db
      POSTGRES_HOST_AUTH_METHOD: trust
    image: registry.toska.cs.helsinki.fi/user-db

  jami:
    <<: *defaults
    image: toska/jami
    environment:
      - PORT=3003
      - NODE_ENV=production
      - POSTGRES_HOST=jami-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    ports:
      - 3003:3003
    container_name: jami

  jami-db:
    <<: *defaults
    image: postgres:13.2
    environment:
      - PGDATA=/data
      - POSTGRES_PASSWORD=postgres
    container_name: jami-db
    ports:
      - 5433:5432

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - frontend
      - backend
    ports:
      - 1337:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  # Following services are used to run sis-updater-worker when anon sis-db needs to be updated. Could probably also use production version, but this certainly works.
  sis-importer-db:
    <<: *defaults
    container_name: sis-importer-db
    image: registry.toska.cs.helsinki.fi/sis-importer-db
    profiles:
      - updater

  sis-updater-worker:
    <<: *defaults
    build:
      context: updater/sis-updater-worker
    depends_on:
      - redis
      - sis-db
      - sis-importer-db
      - sis-updater-nats
    environment:
      CI: 'true'
      DB_URL: postgres://postgres@sis-db:5432/sis-db
      REDIS_URI: //redis:6379
      SIS_IMPORTER_DATABASE: sis-importer-db
      SIS_IMPORTER_HOST: sis-importer-db
      SIS_IMPORTER_PASSWORD: postgres
      SIS_IMPORTER_USER: postgres
      SIS_NATS_TOKEN: dev
      SIS_NATS_URI: sis-updater-nats://sis-updater-nats:4222
    profiles:
      - updater

  sis-updater-scheduler:
    <<: *defaults
    build:
      context: updater/sis-updater-scheduler
    container_name: sis-updater-scheduler
    depends_on:
      - redis
      - sis-importer-db
      - sis-updater-nats
    environment:
      CI: 'true'
      REDIS_URI: //redis:6379
      SECRET_TOKEN: dev
      SIS_IMPORTER_DATABASE: sis-importer-db
      SIS_IMPORTER_HOST: sis-importer-db
      SIS_IMPORTER_PASSWORD: postgres
      SIS_IMPORTER_USER: postgres
      SIS_NATS_TOKEN: dev
      SIS_NATS_URI: sis-updater-nats://sis-updater-nats:4222
      SCHEDULE_IMMEDIATE: '${SCHEDULE_IMMEDIATE}'
      EXIT_AFTER_IMMEDIATES: '${EXIT_AFTER_IMMEDIATES}'
    ports:
      - 8082:8082
    profiles:
      - updater

  sis-updater-nats:
    <<: *defaults
    command: '-cid sis-updater-nats -m 8222 -p 4222 --max_channels 1000 --max_age 2h --hb_fail_count 2 --hb_timeout 10s --hb_interval 10s --auth dev --file_slice_max_bytes 0 --file_slice_max_age 60s --max_msgs 0 -store file -dir datastore'
    container_name: sis-updater-nats
    image: nats-streaming:0.16.2
    profiles:
      - updater
